name: CI-stage-Solidity-master

on:
  push:
    branches:
      - master-solidity

env:
  DOCKER_HUB_NAME: "tss45elcity/"
  DOCKER_HUB_REPOSITORY: "repo_1"
  TAG: ":blockchain_master-solidity_branch_v1"

jobs:

  tests:
    runs-on: ubuntu-latest
    
    steps:

      - name: Install node.js (--version 12.x) part 1
        run: sudo apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates
        
      - name: Install node.js (--version 12.x) part 2
        run: curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
        
      - name: Install node.js (--version 12.x) part 3
        run: sudo apt -y install nodejs && sudo apt -y install gcc g++ make

      - name: Install truffle
        run: npm i --global truffle 

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Make Folder
        run: mkdir -p truffle_folder_/truffle_test 

      - name: npm and truffle init && install @truffle/hdwallet-provider
        run: cd truffle_folder_/truffle_test && npm init && truffle init

      - name: Copy contracts
        run: cp truffle_folder/contracts/* truffle_folder_/truffle_test/contracts/
        
      - name: Copy migrations
        run: cp truffle_folder/migrations/* truffle_folder_/truffle_test/migrations/
        
      - name: Copy test
        run: cp truffle_folder/test/* truffle_folder_/truffle_test/test/

      - name: Copy truffle_config
        run: cp truffle_folder/truffle_config/truffle-config.js truffle_folder_/truffle_test/truffle-config.js
        
      - name: Copy stop_truffle.js
        run: cp truffle_folder/stop_truffle.js truffle_folder_/truffle_test/stop_truffle.js
        
      - name: Copy run_tests.sh
        run: cp truffle_folder/run_tests.sh truffle_folder_/truffle_test/run_tests.sh
        
      - name: truffle unit tests
        run: cd truffle_folder_/truffle_test && ./run_tests.sh



  build_and_push_docker_container:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: tss45elcity/repo_1
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          tags: ${{ env.DOCKER_HUB_NAME }}${{ env.DOCKER_HUB_REPOSITORY }}${{ env.TAG }}
          context: ./truffle_folder
          file: Dockerfile_Rinkeby
          push: true
          #tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}
        

  deploy:
    environment: stage
    runs-on: ubuntu-latest
    needs: build_and_push_docker_container

    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.SSHKEY }}
          source: "deploy_master-solidity/"
          target: "api_master-solidity"
          strip_components: 1

      - name: Deploy to remote server via SSH action
        uses: appleboy/ssh-action@v0.1.3
        continue-on-error: true
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.SSHKEY }}
          script: |
            # Run a new container from a new image
            cd api_master-solidity
            # echo ${{ secrets.PASSWORD }} | sudo -S docker stop test_ci_cd_blockchain_master-solidity
            # echo ${{ secrets.PASSWORD }} | sudo -S docker container rm test_ci_cd_blockchain_master-solidity
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose -f docker-compose.yml stop
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose -f docker-compose.yml rm -f
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose -f docker-compose.yml pull
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose -f docker-compose.yml up --force-recreate ci_cd_blockchain_master_solidity
